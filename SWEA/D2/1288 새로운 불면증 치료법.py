'''
민석이는 불면증에 걸렸다. 그래서 잠이 안 올 때의 민간요법 중 하나인 양 세기를 하려고 한다.
민석이는 1번 양부터 순서대로 세는 것이 재미없을 것 같아서 N의 배수 번호인 양을 세기로 하였다.
즉, 첫 번째에는 N번 양을 세고, 두 번째에는 2N번 양, … , k번째에는 kN번 양을 센다.
이렇게 숫자를 세던 민석이에게 잠은 더 오지 않고 다음과 같은 궁금증이 생겼다.
이전에 셌던 번호들의 각 자리수에서 0에서 9까지의 모든 숫자를 보는 것은 최소 몇 번 양을 센 시점일까?

[입력]
첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
각 테스트 케이스의 첫 번째 줄에는 N (1 ≤ N ≤ 106)이 주어진다.

[출력]
각 테스트 케이스마다 ‘#x’(x는 테스트케이스 번호를 의미하며 1부터 시작한다)를 출력하고,
최소 몇 번 양을 세었을 때 이전에 봤던 숫자들의 자릿수에서 0에서 9까지의 모든 숫자를 보게 되는지 출력한다.
'''
T = int(input())

for tc in range(1, T+1):

    # 1) N을 일단 스트링으로 받는다 => for문 돌리려면 N은 스트링이어야함
    N = input()

    # 2) 0~9까지 확인할 배열 생성
    arr = [0 for _ in range(10)]

    # 3) N은 문자열이니까 계산용 int N을 만들어둔다
    intN = int(N)

    # 4) count는 몇번 양을 세는지 확인할 변수
    count = 1

    # 5) 0 ~ 9 사이의 숫자가 나타나지 않았다면 = 아직 배열에 0이 있다면
    while 0 in arr:

        # 6) 문자열 N을 가지고 for문을 돌린다
        for i in N:
            if arr[int(i)] > 0: # 만약 이미 나왔다면 그냥 다음걸로 넘어가고
                continue
            else:   #아직 안나왔으면 그 숫자 위치에 1 더해주기
                arr[int(i)] += 1
        
        # 7) 아직 안끝났다면 count에 1을 더해준다
        count += 1
        # 8) 그리고 따로 만든 정수N이랑 count를 곱한 후, for문 돌리기 쉽게 그걸 다시 문자열로 만든다
        N = str(intN * count)

    # 9) while이 끝났으면 마지막 count += 1이 먹힌채로 끝났을 것이다. 그래서 1을 빼줘야함
    count -= 1

    # 끝
    print('#{} {}'.format(tc, intN*count))





